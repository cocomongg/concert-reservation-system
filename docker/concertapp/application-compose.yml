version: "3.8"

services:
  # spring application
  concert-service:
    image: concert-reservation:latest
    container_name: concert-reservation
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/concert_reservation"
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_REDIS_HOST: "redis"
      SPRING_REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: "kafka1:9092"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "2G"
        reservations:
          cpus: "0.5"
          memory: "1G"
    depends_on:
      - redis
      - mysql
      - kafka1

  # redis
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    volumes:
      - redis_volume_data:/data
    ports:
      - "6379:6379"

  # mysql
  mysql:
    image: mysql:8
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "concert_reservation"
    volumes:
      - mysql_data:/var/lib/mysql

  # kafka
  zookeeper1:
    container_name: zookeeper1
    image: confluentinc/cp-zookeeper:latest
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:latest
    restart: always
    ports:
      - "29092:29092"
      - "9092:9092"
    depends_on:
      - zookeeper1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    depends_on:
      - kafka1
    ports:
      - "8089:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: Local Kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper1:2181

volumes:
  redis_volume_data:
  mysql_data: